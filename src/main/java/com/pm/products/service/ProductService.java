package com.pm.products.service;import com.pm.products.model.Product;import io.micrometer.observation.Observation;import io.micrometer.observation.ObservationRegistry;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Service;import java.util.ArrayList;import java.util.List;@Servicepublic class ProductService {    private static List<Product> productList = new ArrayList<>();    @Autowired    private ObservationRegistry observationRegistry;    public Product addProduct(Product product) {        productList.add(product);        return Observation.createNotStarted("ProductAdd", observationRegistry)                .observe(() -> product);    }    public List<Product> getAllProducts() {        return Observation.createNotStarted("GetAllProducts", observationRegistry)                .observe(() -> productList);    }    public Product getProductById(int productId) {        return Observation.createNotStarted("GetProductById", observationRegistry)                .observe(() -> getProductByID(productId));    }    private Product getProductByID(int productId) {        return productList.stream()                .filter(product -> product.getId() == productId)                .findFirst()                .orElseThrow(() -> new RuntimeException(productId + " is cannot be present"));    }}